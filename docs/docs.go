// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/account/coins": {
            "get": {
                "description": "Get all users in DB.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account/coins"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.ResponseGetUsers"
                        }
                    }
                }
            }
        },
        "/v1/account/coins/{username}": {
            "get": {
                "description": "Get user balance in DB.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account/coins"
                ],
                "summary": "Get user balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.ResponseGetBalance"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user balance in DB.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account/coins"
                ],
                "summary": "Update user balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateCoinBalanceBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new user in DB.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account/coins"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.NewUserBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove user in DB.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account/coins"
                ],
                "summary": "Remove user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.ResponseGetBalance": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/api.CoinBalanceResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "account.ResponseGetUsers": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.CoinBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                }
            }
        },
        "api.NewUserBody": {
            "type": "object",
            "required": [
                "coins",
                "token",
                "username"
            ],
            "properties": {
                "coins": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "meta": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "api.UpdateCoinBalanceBody": {
            "type": "object",
            "required": [
                "coins"
            ],
            "properties": {
                "coins": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Go Lessons API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
